{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Simulation",
  "description": "Simulation configuration schema. Specify an experiment using multiple engines and transceiver functions.",
  "$id": "#Simulation",
  "type": "object",
  "properties" : {
    "SimulationLoop" : {
      "enum" : ["FTILoop", "EventLoop"],
      "default": "FTILoop",
      "description": "Type of simulation loop used in the experiment"
    },
    "SimulationTimeout" : {
      "type" : "number",
      "default": 0,
      "description": "Experiment Timeout (in seconds). It refers to simulation time."
    },
    "SimulationTimestep" : {
      "type" : "number",
      "default": 0.01,
      "description": "Time in seconds the simulation advances in each Simulation Loop. It refers to simulation time."
    },
    "DataPackProcessor" : {
      "type" : "string",
      "enum" :  ["tf", "cg"],
      "default": "tf",
      "description": "Framework used to process and rely datapack data between engines. Available options are the TF framework (tf) and Computational Graph (cg)"
    },
    "ProcessLauncherType" : {
      "type" : "string",
      "default": "Basic",
      "description": "ProcessLauncher type to be used for launching engine processes"
    },
    "EngineConfigs" : {
      "type" : "array",
      "items": {"$ref": "json://nrp-core/engines/engine_base.json#EngineBase"},
      "description": "Engines that will be started in the experiment"
    },
    "ExternalProcesses" : {
      "type" : "array",
      "items": {"$ref": "json://nrp-core/process_launcher.json#ProcessLauncher"},
      "description": "Additional processes that will be started in the experiment"
    },
    "DataPackProcessingFunctions" : {
      "type" : "array",
      "items": {"$ref": "json://nrp-core/transceiver_function.json#TransceiverFunction"},
      "description": "Transceiver and Preprocessing functions that will be used in the experiment"
    },
    "StatusFunction" : {
      "type" : "object",
      "items": {"$ref": "json://nrp-core/transceiver_function.json#TransceiverFunction"},
      "description": "Status Function that will be used in the experiment"
    },
    "ComputationalGraph" : {
      "type": "array",
      "items": "string",
      "description": "List of filenames defining the CG nodes and connections"
    },
    "EventLoop" : {
      "type": "object",
      "description": "Event Loop configuration parameters",
      "default": {"ExecutionMode": "InputDriven"},
      "properties" : {
        "ExecutionMode": {
          "type": "string",
          "enum": ["InputDriven", "OutputDriven"],
          "description": "Execution Mode that will be used when running the Event Loop"
        },
        "Timeout" : {
          "type" : "number",
          "description": "Event loop timeout (in seconds). 0 means no timeout. If not specified 'SimulationTimeout' is used instead"
        },
        "Timestep" : {
          "type" : "number",
          "description": "Time length (in seconds) of each loop, i.e it is the inverse of the Event Loop frequency. If not specified 'SimulationTimestep' is used instead"
        }
      },
      "required": ["ExecutionMode"]
    },
    "ConnectROS" : {
      "$ref": "json://nrp-core/nrp_connectors.json#/ROSNode",
      "description": "If this parameter is present a ROS node is started by NRPCoreSim"
    },
    "ConnectMQTT" : {
      "$ref": "json://nrp-core/nrp_connectors.json#/MQTTClient",
      "description": "If this parameter is present an MQTT client is instantiated and connected"
    }
  },
  "required": []
}