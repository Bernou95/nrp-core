/*! \page simulation_schema Simulation Configuration Schema

The simulation schema contains all the necessary information to initialize and run an experiment, including details such as the engines involved in the experiment, active TransceiverFunctions, and engine timesteps. It defines the structure and parameters of the simulation configuration file to be created by the users for each of their experiments.

\section simulation_schema_parameters Parameters

<table>
<tr><th>Name<th>Description<th>Type<th>Default<th>Required<th>Array<th>Values
<tr><td>SimulationLoop<td>Type of simulation loop used in the experiment<td>enum<td>"FTILoop"<td><td><td>"FTILoop", "EventLoop"
<tr><td>SimulationTimeout<td>Experiment Timeout (in seconds). It refers to simulation time. 0 means no timeout<td>integer<td>0<td><td><td>
<tr><td>SimulationTimestep<td>Time in seconds the simulation advances in each \ref fti_loop "Simulation Loop"<td>number<td>0.01<td><td><td>
<tr><td>ProcessLauncherType<td>ProcessLauncher type to be used for launching engine processes<td>string<td>Basic<td><td><td>
<tr><td>EngineConfigs<td>Engines that will be started in the experiment<td>\ref engine_base_schema "EngineBase"<td><td>X<td><td>
<tr><td>DataPackProcessor<td>Framework used to process and rely datapack data between engines. Available options are the TF framework (tf) and Computation Graph (cg)<td>enum<td>"tf"<td><td><td>"tf", "cg"
<tr><td>DataPackProcessingFunctions<td>Transceiver and Preprocessing functions that will be used in the experiment<td>\ref transceiver_function_schema "TransceiverFunction"<td>[]<td><td>X<td>
<tr><td>ComputationalGraph<td>List of filenames defining the ComputationalGraph that will be used in the experiment<td>string<td>[]<td><td>X<td>
<tr><td>StartROSNode<td>If true a ROS node is started by NRPCoreSim<td>boolean<td>false<td><td><td>
</table>

\section simulation_schema_example Example

\include tf_exchange/simulation_config.json

\section simulation_schema_schema Schema

\include simulation.json

*/
