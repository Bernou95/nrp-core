/*! \page installation Installation Instructions

The instructions required to install NRP-core from the source (the only option currently available) are listed below.

\section installation_requirements Requirements

<b>WARNING:</b> Previous versions of the NRP install forked versions of several libraries, particularly NEST and Gazebo. Installing NRP-core in a system where a previous version of NRP is installed is known to cause conflicts. We strongly recommend not to do it.

\subsection os Operative System

NRP-core has only been tested on <b>Ubuntu 20.04</b> at the moment, and therefore this OS and version are recommended. Installation in other environments might be possible but has not been tested yet.

\subsection nest_version NEST

NRP-core only supports <b>NEST 3</b>. 

As part of the installation process NEST 3 is built and installed. If you have an existing installation of NEST we recommend you to uninstall it before installing NRP-core. In case you still want to use your installed version, you can avoid the installation process to build and install NEST by changing the value of <i>ENABLE_NEST</i> from <i>FULL</i> to <i>CLIENT</i> in the root CMakeLists.txt file:

\code{.sh}
set(ENABLE_NEST CLIENT)
\endcode

In any case, be aware that NEST 2.x is incompatible with NRP-core.

\dontinclude README.md

\section installation_dependencies Dependency Installation
\skip Start of dependencies installation
\until End of dependencies installation

\section installation_procedure Installation
\skip Start of installation
\until End of installation

\section installation_environment Setting the environment

In order to properly set the environment to run experiments with NRP-core, please make sure to add the lines below to your ~/.bashrc file
\skip Start of setting environment
\until End of setting environment

\section installation_opensim Special steps for installing OpenSim

Installation of the OpenSim engine requires some modification over the instructions found at <a href="https://github.com/opensim-org/opensim-core">https://github.com/opensim-org/opensim-core</a>. The procedure below should therefore be followed.

\code{.sh}
sudo apt-get update
# For ipopt
sudo apt-get install -y libblas-dev libatlas-base-dev
sudo apt-get install -y gcc g++ gfortran patch libmetis-dev
sudo apt-get install -y coinor-libipopt-dev
# For adolc
sudo apt-get install -y libtool libtool-bin
sudo apt-get install -y autoconf
sudo apt-get install -y libadolc-dev

sudo apt-get --yes install  cmake cmake-curses-gui \
                           freeglut3-dev libxi-dev libxmu-dev \
                           liblapack-dev swig python-dev \
                           openjdk-8-jdk
export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64

# Install PATH
OPENSIM_PATH=$HOME/Documents/OpenSim
mkdir -p $OPENSIM_PATH
cd $OPENSIM_PATH

# Build Opensim dependencies
git clone https://github.com/opensim-org/opensim-core.git
mkdir opensim_dependencies_build
cd opensim_dependencies_build
cmake ../opensim-core/dependencies/ \
      -DCMAKE_INSTALL_PREFIX='../opensim_dependencies_install' \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo
make -j4

# Environments for opensim
sudo alias python=python3
sudo apt-get install -y python3-pip
sudo pip3 install numpy    

cd $OPENSIM_PATH
mkdir opensim_build
cd opensim_build
JAVA_TOOL_OPTIONS=-Dfile.encoding=UTF8
cmake ../opensim-core \
      -DCMAKE_INSTALL_PREFIX="../opensim_install" \
      -DCMAKE_BUILD_TYPE=RelWithDebInfo \
      -DOPENSIM_DEPENDENCIES_DIR="../opensim_dependencies_install" \
      -DBUILD_PYTHON_WRAPPING=ON \
      -DBUILD_JAVA_WRAPPING=ON \
      -DWITH_BTK=ON
make -j4
make -j4 install

cd $OPENSIM_PATH
cd opensim_install/lib/python3.8/site-packages
python3 setup.py install

cd $HOME
echo 'export LD_LIBRARY_PATH='$OPENSIM_PATH'/opensim_install/lib:$LD_LIBRARY_PATH' >> $HOME/.bashrc
echo 'export PYTHONPATH='$OPENSIM_PATH'/opensim_install/lib/python3.8/site-packages:$PYTHONPATH' >> $HOME/.bashrc
source $HOME/.bashrc

\endcode

*/
