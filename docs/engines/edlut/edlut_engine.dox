/*! \page edlut_engine EDLUT Engine

The EDLUT Engine brings the possibility to connect the EDLUT simulator to NRP-core.
It enables users to log experiment data to file for further offline anaylisis or to stream it over the network for, e.g., remote data visualization and experiment monitoring.

The engine implementation is based on the \ref engine_grpc "Protobuf over gRPC communication protocol" and it only accepts the so-called "EdlutSpikesDatapack". On the same way, after processing
the input datapack, this engine returns EdlutSpikesDatapack as well.

See \ref engine_datatransfer_config_section "below" for more details about the engine configuration parameters.

\section edlut_engine_datapacks EDLUT Datapacks

This gRPC implementation uses \ref datapacks_protobuf. Below is shown the protobuf message definition used by the EDLUT Engine:

\include edlut_msgs.proto

The EdlutSpikesDatapack consists of the following attributes:
<table>
<caption id="physics_link_attributes_table">EdlutSpikesDatapack Attributes</caption>
<tr><th>Attribute  <th>Description                                 <th>Python Type                   <th>C type
<tr><td>time        <td>Simulation Time                              <td>float <td>float
<tr><td>spikes_time    <td>Spikes Firing Time                       <td>numpy.array(numpy.float32) <td>std::array<float>
<tr><td>neuron_indexes    <td>Neuron Indexes Firing                      <td>numpy.array(numpy.float32) <td>std::array<float>
</table>

Each of this attributes can be accessed under their respective names from the *data* attribute of each DataPack type.


\section engine_datatransfer_config_section Engine Configuration Parameters

This Engine type parameters are defined in EDLUT schema (listed \ref engine_edlut_schema "here"), which in turn is based on \ref engine_base_schema "EngineBase" and \ref engine_comm_protocols_schema "EngineGRPC" schemas and thus inherits all parameters from them.

To use this engine in an experiment, set `EngineType` to <b>"edlut_grpc_engine"</b>.

- Parameters inherited from \ref engine_base_schema "EngineBase" schema:

<table>
<tr><th>Name<th>Description<th>Type<th>Default<th>Required<th>Array
<tr><td>EngineName<td>Name of the engine<td>string<td><td>X<td>
<tr><td>EngineType<td>Engine type. Used by EngineLauncherManager to select the correct engine launcher<td>string<td><td>X<td>
<tr><td>EngineProcCmd<td>Engine Process Launch command<td>string<td><td><td>
<tr><td>EngineProcStartParams<td>Engine Process Start Parameters<td>string<td>[]<td><td>X
<tr><td>EngineEnvParams<td>Engine Process Environment Parameters<td>string<td>[]<td><td>X
<tr><td>EngineLaunchCommand<td>\ref configuration_schema "LaunchCommand" with parameters that will be used to launch the engine process<td>object<td>{"LaunchType":"BasicFork"}<td><td>
<tr><td>EngineTimestep<td>Engine Timestep in seconds<td>number<td>0.01<td><td>
<tr><td>EngineCommandTimeout<td>Engine Timeout (in seconds). It tells how long to wait for the completion of the engine runStep. 0 or negative values are interpreted as no timeout<td>number<td>0.0<td><td>
</table>

- Parameters inherited from the \ref engine_grpc "EngineGRPC" schema:

<table>
<tr><th>Name<th>Description<th>Type<th>Default<th>Required<th>Array
<tr><td>ServerAddress<td>gRPC Server address. Should this address already be in use, simulation initialization will fail<td>string<td>localhost:9004<td><td>
</table>

- Parameters specific to this engine type:

<table>
<tr><th>Name<th>Description<th>Type<th>Default<th>Required<th>Array
<tr><td>NetworkFile<td>Path to the storage of file with the architecture of the network<td>string<td><td>X<td>
<tr><td>WeightsFile<td>Path to the storage of file containing initial weights of neurons<td>string<td><td>X<td>
<tr><td>NumThreads<td>A simulation identifier to be added to MQTT topics published by this Engine<td>string<td>1<td><td>
<tr><td>dumps<td>List of datapacks for transfer<td>dumpItem<td>[]<td><td>X
</table>

- dumpItem: elements of the *dumps* array above:

<table>
<tr><th>Name<th>Description<th>Type<th>Default<th>Required<th>Array
<tr><td>name<td>Name of the datapack for transfer<td>string<td><td>X<td>
</table>


\section engine_datatransfer_schema Schema

As explained above, the schema used by the EDLUT engine inherits from \ref engine_base_schema "EngineBase" and \ref  engine_comm_protocols_schema "EngineGRPC" schemas. A complete schema for the configuration of this engine is given below:

\include engines/engines_edlut.json



*/