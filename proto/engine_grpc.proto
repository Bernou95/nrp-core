syntax = "proto3";

package EngineGrpc;

service EngineGrpcServiceInterface
{
    rpc init(InitRequest)               returns (InitReply)        {}
    rpc shutdown(ShutdownRequest)       returns (ShutdownReply)    {}
    rpc runLoopStep(RunLoopStepRequest) returns (RunLoopStepReply) {}
    rpc setDevice(SetDeviceRequest)     returns (SetDeviceReply)   {}
    rpc getDevice(GetDeviceRequest)     returns (GetDeviceReply)   {}
}

message InitRequest
{
    string json = 1;
}

message InitReply
{
    string json = 1;
}

message ShutdownRequest
{
    string json = 1;
}

message ShutdownReply
{
    string json = 1;
}

message RunLoopStepRequest
{
    float timeStep = 1;
}

message RunLoopStepReply
{
    float engineTime = 1;
}

message SetDeviceRequest
{
    repeated SetDeviceMessage request = 1;
}

message SetDeviceMessage
{
    DeviceIdentifier deviceId = 1;

    oneof data
    {
        GazeboCameraSetData camera = 2;
        GazeboLinkSetData   link   = 3;
        GazeboJointSetData  joint  = 4;
        NestSetData         nest   = 5;
    }
}

message NestSetData
{
    string json = 1;
}

message GazeboCameraSetData
{

}

message GazeboLinkSetData
{

}

message GazeboJointSetData
{
    float position = 1;
    float velocity = 2;
    float effort   = 3;
}

message SetDeviceReply
{

}

message GetDeviceRequest
{
    repeated DeviceIdentifier deviceId = 1;
}

message GetDeviceReply
{
    repeated GetDeviceMessage reply = 1;
}

message GetDeviceMessage
{
    DeviceIdentifier deviceId = 1;

    oneof data
    {
        GazeboCamera camera = 2;
        GazeboLink   link   = 3;
        GazeboJoint  joint  = 4;
        Nest         nest   = 5;
    }
}

message DeviceIdentifier
{
    string deviceName = 1;
    string deviceType = 2;
    string engineName = 3;
}

message GazeboCamera
{
    uint32 imageWidth  = 1;
    uint32 imageHeight = 2;
    uint32 imageDepth  = 3;
    bytes  imageData   = 4;
}

message GazeboLink
{
    repeated float position        = 1;
    repeated float rotation        = 2;
    repeated float linearVelocity  = 3;
    repeated float angularVelocity = 4;
}

message GazeboJoint
{
    float position = 1;
    float velocity = 2;
    float effort   = 3;
}

message Nest
{
    string json = 1;
}

// EOF
