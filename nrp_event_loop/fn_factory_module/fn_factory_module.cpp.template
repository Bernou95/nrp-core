#include <functional>
#include "nrp_event_loop/fn_factory/functional_node_factory.h"

#include "<<FUNCTION_PROTOTYPES.H>>"

// ===================================================================================
//     This document was autogenerated by generateFNFactoryModule from <<FUNCTION_PROTOTYPES.H>>
//     EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                
// ===================================================================================

std::map<std::string, std::function<FunctionalNodeBase* (const std::string&, FunctionalNodePolicies::ExecutionPolicy)>> createFNMap;

extern "C" void loadFNFactory();
void loadFNFactory()
{
    <<MAP_EMPLACE_STATEMENTS>>
}

extern "C" FunctionalNodeBase* createFunctionalNode(const std::string& functionName, const std::string& nodeName, FunctionalNodePolicies::ExecutionPolicy policy);
FunctionalNodeBase* createFunctionalNode(const std::string& functionName, const std::string& nodeName, FunctionalNodePolicies::ExecutionPolicy policy)
{
    if(createFNMap.count(functionName))
        return createFNMap.at(functionName)(nodeName, policy);
    else
        return nullptr;
}

